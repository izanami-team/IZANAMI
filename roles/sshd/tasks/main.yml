- name: replace /etc/sudoers
  replace: dest=/etc/sudoers regexp='\# \%wheel\s+ALL=\(ALL\)\s+ALL' replace='%wheel        ALL=(ALL)       ALL'
  tags: ssh

- name: replace sshd_config
  replace: dest="/etc/ssh/sshd_config" regexp="{{ item.regexp }}" replace="{{ item.replace }}" 
  with_items:
   - { regexp: '^Subsystem\s+sftp\s+/usr/libexec/openssh/sftp-server$', replace: 'Subsystem sftp internal-sftp' }
  tags: ssh

- name: replace sshd_config
  replace: dest="/etc/ssh/sshd_config" regexp="{{ item.regexp }}" replace="{{ item.replace }}" 
  with_items:
   - { regexp: '^#?PermitRootLogin\s+yes$', replace: 'PermitRootLogin no' }
   - { regexp: '^#Protocol\s+2$', replace: 'Protocol 2' }
   - { regexp: '^#PermitEmptyPasswords\s+no$', replace: 'PermitEmptyPasswords no' }
   - { regexp: '^#PasswordAuthentication\s+yes$', replace: 'PasswordAuthentication no' }
   - { regexp: '^#PubkeyAuthentication\s+yes$', replace: 'PubkeyAuthentication yes' }
  tags: ssh

- name: insert sshd configuation block in /etc/sshd_config
  blockinfile:
    dest: /etc/ssh/sshd_config
    block: "{{ sshd_sftp }}"
  notify:
   - restart sshd
  tags: ssh

- name: create ssh groups
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ group.shared }}"
    - "{{ group.sftponly }}"
  tags: ssh

- name: create ssh user
  user:
    name: "{{ item.name }}"
    password: "{{ item.password | password_hash('sha256') }}"
    groups: "{{ item.group }}"
    state: present
    append: yes
  with_items:
    - "{{ ssh.users | default([]) }}"
  tags: ssh

- name: Set up authorized_keys for the deploy user 
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', 'roles/sshd/files/public_keys/' + item.name) }}"
  with_items:
    - "{{ ssh.users | default([]) }}"
  tags: ssh

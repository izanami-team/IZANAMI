- name: install the extras repo of nginx for amazon linux 2
  shell: "amazon-linux-extras enable nginx1"
  when: amzn2
  tags: nginx

- name: php installed
  yum: name=nginx state=present enablerepo=amzn2extra-nginx1
  when: amzn2
  tags: nginx

- name: add nginx.repo
  template: src="nginx.repo.j2" dest=/etc/yum.repos.d/nginx.repo owner=root group=root mode=0644 force=no
  when: centos_rhel
  tags: nginx

- name: install the latest version of nginx 
  yum: name=nginx state=present
  when: centos_rhel
  tags: nginx

- name: replace nginx.conf
  replace: dest="/etc/nginx/nginx.conf" regexp="{{ item.regexp }}" replace="{{ item.replace }}" 
  with_items: "{{ replace_vars }}"
  tags: nginx

- name: copy a new ssl files
  copy: src="{{ item }}" dest=/etc/nginx/ssl/ owner=root group=root mode=0644 force=no
  with_fileglob: "ssl/*"
  tags: nginx

- name: revers proxy
  template: src=default.conf.j2 dest=/etc/nginx/conf.d/default.conf force=no
  tags: nginx

- name: Create nginx configuration file vhosts
  template: src=vhosts.conf.j2 dest=/etc/nginx/conf.d/{{ item.name }}.conf force=no
  with_items: "{{ vhosts }}"
  tags: nginx

- name: nginx vhosts directory
  file: path=/var/www/vhosts/{{ item.name }}/ state=directory owner=nginx group={{ group.shared }} mode=0775
  with_items: "{{ vhosts }}"
  tags: nginx

- name: change owner
  file: path=/var/www/vhosts owner=root group=root mode=0755
  tags: nginx

- name: nginx vhosts cgi-bin
  file: path=/var/www/vhosts/{{ item.name }}/cgi-bin/ state=directory owner=nginx group={{ group.shared }} mode=2775
  with_items: "{{ vhosts }}"
  tags: nginx

- name: nginx vhosts htdocs
  file: path=/var/www/vhosts/{{ item.name }}/htdocs/ state=directory owner=nginx group={{ group.shared }} mode=2775
  with_items: "{{ vhosts }}"
  tags: nginx

- name: nginx vhosts logs
  file: path=/var/www/vhosts/{{ item.name }}/logs/ state=directory owner=nginx group={{ group.shared }} mode=2775
  with_items: "{{ vhosts }}"
  tags: nginx

- name: create htpasswd
  htpasswd: path=/var/www/htpasswd name={{  basic.user }} password={{ basic.passwd }} owner=nginx group={{group.shared}} mode=0644
  when: basic.auth
  tags: nginx

- name: modify nginx users
  user: name=nginx group={{group.shared}} groups=nginx append=yes
  tags: nginx

- name: logrotate.d for nginx
  template: src=nginx.j2 dest=/etc/logrotate.d/nginx
  tags: nginx

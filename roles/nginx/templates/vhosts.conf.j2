upstream app-servers {
    server 127.0.0.1:8080;
}

server {
    {% if ( item.letsencrypt == True ) or ( item.ssl.use == True ) %}
    listen 443 ssl;
    {% endif %}
    listen 80;
    server_name {{ item.name }};
    root /var/www/vhosts/{{ item.name }}/htdocs;
    access_log  /var/www/vhosts/{{ item.name }}/logs/access.log  main;
    error_log   /var/www/vhosts/{{ item.name }}/logs/error.log warn;

    {% if item.ssl.only | bool %}
    if ( $scheme = "http" ) {
        return 301 https://$host$request_uri;
    }
    {% endif%}

    location /.well-known {
        satisfy any;
        allow all;
    }

    location /mt {
      {% if (mt.basic is defined) and (inventory_file != 'local') %}
        auth_basic "auth";
        auth_basic_user_file /var/www/htpasswd; 
      {% endif %}
        client_max_body_size 300M;
        proxy_redirect off;
        proxy_read_timeout  600;
      {% if ( item.letsencrypt == True ) or ( item.ssl.use == True ) %}
        proxy_set_header    X-Forwarded-HTTPS on;
      {% endif %}
        proxy_set_header    X-Forwarded-Proto $scheme;
        # proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto; #ELBの場合は$http_x_forwarded_protoを渡す
        proxy_set_header    X-Forwarded-Host  $host;
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_pass http://app-servers;
    }

    {% if ( item.letsencrypt == True ) or ( item.ssl.use == True ) %}
    {% if item.letsencrypt == True %}
    ssl_certificate /etc/letsencrypt/live/{{ item.name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.name }}/privkey.pem;
    {% else %}
    ssl_certificate /etc/nginx/ssl/{{ item.ssl.crt }};
    
    ssl_certificate_key /etc/nginx/ssl/{{ item.ssl.key }}
    {% endif -%}
}

